import java.security.SecureRandom;
import java.util.Scanner;

public class RandomPasswordGenerator {

    // Define character sets
    private static final String UPPERCASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    private static final String LOWERCASE = "abcdefghijklmnopqrstuvwxyz";
    private static final String NUMBERS = "0123456789";
    private static final String SPECIAL_CHARACTERS = "!@#$%^&*()-_+=<>?";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Get the desired password length from the user
        System.out.print("Enter the desired password length: ");
        int length = scanner.nextInt();

        // Get the desired character types from the user
        System.out.println("Include the following characters? (y/n)");
        System.out.print("Uppercase letters (A-Z): ");
        boolean includeUppercase = scanner.next().toLowerCase().equals("y");

        System.out.print("Lowercase letters (a-z): ");
        boolean includeLowercase = scanner.next().toLowerCase().equals("y");

        System.out.print("Numbers (0-9): ");
        boolean includeNumbers = scanner.next().toLowerCase().equals("y");

        System.out.print("Special characters (!@#$%^&*()-_+=<>?): ");
        boolean includeSpecial = scanner.next().toLowerCase().equals("y");

        // Ensure that at least one character type is selected
        if (!includeUppercase && !includeLowercase && !includeNumbers && !includeSpecial) {
            System.out.println("You must include at least one type of character.");
            return;
        }

        // Generate the password
        String password = generatePassword(length, includeUppercase, includeLowercase, includeNumbers, includeSpecial);

        // Display the generated password
        System.out.println("Generated Password: " + password);
    }

    public static String generatePassword(int length, boolean includeUppercase, boolean includeLowercase,
            boolean includeNumbers, boolean includeSpecial) {
        StringBuilder password = new StringBuilder();
        SecureRandom random = new SecureRandom();

        // Build the character set based on user selection
        StringBuilder characterSet = new StringBuilder();
        if (includeUppercase)
            characterSet.append(UPPERCASE);
        if (includeLowercase)
            characterSet.append(LOWERCASE);
        if (includeNumbers)
            characterSet.append(NUMBERS);
        if (includeSpecial)
            characterSet.append(SPECIAL_CHARACTERS);

        // Generate the password
        for (int i = 0; i < length; i++) {
            int randomIndex = random.nextInt(characterSet.length());
            password.append(characterSet.charAt(randomIndex));
        }

        return password.toString();
    }
}
